name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch
  
jobs:
  # Job to set up the Python environment, install dependencies, and run tests
  test:
    runs-on: ubuntu-latest  # The environment for the job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checks out the repository

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  # Specify the Python version

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt  # Install dependencies from your requirements file

      - name: Set up Django Database
        run: |
          python manage.py migrate  # Set up database migrations for testing

      - name: Run tests
        run: |
          python manage.py test  # Run the Django tests

  # Job for deployment to production (if needed)
  deploy:
    runs-on: ubuntu-latest  # Environment for the deployment job
    needs: test  # This job runs only after the test job has completed

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
    
      # Step 2: Set up SSH access
      - name: Set up SSH
        run: |
          echo "${{ secrets.MY_SECRETE }}" > key.pem
          chmod 400 key.pem

      - name: Deploy to Production
        run: |
          # Example: Deploy to Heroku (requires HEROKU_API_KEY and HEROKU_APP_NAME as secrets)
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@13.233.151.77 << 'EOF'
            set -x
            source /home/online_class_book/venv/bin/activate
            cd /home/online_class_book/online_class_book
            git pull origin main
            pip3 install -r requirements.txt
            python3 manage.py makemigrations
            python3 manage.py migrate
          EOF
        
      # Step 4: Clean up sensitive files
      - name: Clean up
        run: rm -f key.pem